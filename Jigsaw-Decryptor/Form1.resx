<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bwDecrypt.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>62</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>